/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize) {
  
    const int OFFSET = 1000;       
    const int SIZE = 2001;          
    int hash_set[SIZE];
    memset(hash_set, 0, sizeof(hash_set));
    
    int* result = (int*)malloc(sizeof(int) * (nums1Size < nums2Size ? nums1Size : nums2Size));
    *returnSize = 0;
    
    for (int i = 0; i < nums1Size; i++) {
        hash_set[nums1[i] + OFFSET] = 1;
    }
    
    for (int i = 0; i < nums2Size; i++) {
        if (hash_set[nums2[i] + OFFSET] == 1) {
            result[*returnSize] = nums2[i];
            (*returnSize)++;
            hash_set[nums2[i] + OFFSET] = 0;
        }
    }
    
    return result;
}
